/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Fri Mar 31 14:26:17 2017. */

#ifndef PB_DEVICECONFIG_PB_H_INCLUDED
#define PB_DEVICECONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DeviceConfigV2 {
    bool fixOn;
    bool revOn;
    bool fixDoor;
    bool revDoor;
    bool offBuzz;
    uint32_t trackDelayTime;
    uint32_t trackDist;
    uint32_t stdbyTrackDelayTime;
    bool onByEngineOn;
    uint32_t CAMdelay;
    uint32_t CAMres;
    uint32_t stdbyCAMdelay;
/* @@protoc_insertion_point(struct:DeviceConfigV2) */
} DeviceConfigV2;

typedef struct _localConfig {
    bool has_GMT;
    uint32_t GMT;
    bool has_DST;
    bool DST;
/* @@protoc_insertion_point(struct:localConfig) */
} localConfig;

/* Default values for struct fields */
extern const bool DeviceConfigV2_fixOn_default;
extern const bool DeviceConfigV2_revOn_default;
extern const bool DeviceConfigV2_fixDoor_default;
extern const bool DeviceConfigV2_revDoor_default;
extern const bool DeviceConfigV2_offBuzz_default;
extern const uint32_t DeviceConfigV2_trackDelayTime_default;
extern const uint32_t DeviceConfigV2_trackDist_default;
extern const uint32_t DeviceConfigV2_stdbyTrackDelayTime_default;
extern const bool DeviceConfigV2_onByEngineOn_default;
extern const uint32_t DeviceConfigV2_CAMdelay_default;
extern const uint32_t DeviceConfigV2_CAMres_default;
extern const uint32_t DeviceConfigV2_stdbyCAMdelay_default;

/* Initializer values for message structs */
#define DeviceConfigV2_init_default              {false, false, false, false, false, 5u, 30u, 5u, false, 10u, 2u, 0u}
#define localConfig_init_default                 {false, 0, false, 0}
#define DeviceConfigV2_init_zero                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define localConfig_init_zero                    {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DeviceConfigV2_fixOn_tag                 1
#define DeviceConfigV2_revOn_tag                 2
#define DeviceConfigV2_fixDoor_tag               3
#define DeviceConfigV2_revDoor_tag               4
#define DeviceConfigV2_offBuzz_tag               5
#define DeviceConfigV2_trackDelayTime_tag        6
#define DeviceConfigV2_trackDist_tag             7
#define DeviceConfigV2_stdbyTrackDelayTime_tag   8
#define DeviceConfigV2_onByEngineOn_tag          9
#define DeviceConfigV2_CAMdelay_tag              10
#define DeviceConfigV2_CAMres_tag                11
#define DeviceConfigV2_stdbyCAMdelay_tag         12
#define localConfig_GMT_tag                      1
#define localConfig_DST_tag                      2

/* Struct field encoding specification for nanopb */
extern const pb_field_t DeviceConfigV2_fields[13];
extern const pb_field_t localConfig_fields[3];

/* Maximum encoded size of messages (where known) */
#define DeviceConfigV2_size                      48
#define localConfig_size                         8

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DEVICECONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
